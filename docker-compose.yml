version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_DB: document_db
      POSTGRES_USER: shiv9090
      POSTGRES_PASSWORD: shiv9090
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    

  backend:
    build:
      context: ./backend
    container_name: django_backend
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DB_NAME=document_db
      - DB_USER=shiv9090
      - DB_PASSWORD=shiv9090
      - DB_HOST=db
      - DB_PORT=5432
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - __pycache__/
            - "*.pyc"
            - "*.pyo"
            - "*.pyd"
            - ".pytest_cache/"
            - ".coverage"
        - action: rebuild
          path: ./backend/requirements.txt
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
    container_name: react_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=http://django_backend:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
            - .git/
            - "*.log"
            - dist/
            - build/
        - action: rebuild
          path: ./frontend/package.json
    depends_on:
      - backend
  adminer:
    image: adminer
    container_name: adminer_db
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      - db

volumes:
  postgres_data:
